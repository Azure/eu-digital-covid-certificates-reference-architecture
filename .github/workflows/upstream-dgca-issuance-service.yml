# Sourced from https://github.com/eu-digital-green-certificates/dgc-gateway/blob/a57d6b61ca69f435814edf68615a22c09e88e34a/.github/workflows/ci-main.yml

# Copyright (C) 2021 T-Systems International GmbH and all other contributors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: "Upstream: dgca-issuance-service"

on:
  push:
    branches:
      - main
    paths:
      - 'upstream/dgca-issuance-service'
      - 'upstream/patches/dgca-issuance-service/**'
      - '.github/workflows/upstream-dgca-issuance-service.yaml'

jobs:
  build-docker:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/setup-java@v2
        with:
          java-version: 11
          distribution: adopt
      - uses: actions/checkout@v2
        with:
          submodules: true
          fetch-depth: 0
      - name: patch
        working-directory: ./upstream/dgca-issuance-service
        run: >-
          for f in ../patches/dgca-issuance-service/*.patch; do
          patch -p1 < $f;
          done;
      - uses: actions/cache@v2
        with:
          path: |
            ~/.m2/repository
          key: ${{ runner.os }}-${{ hashFiles('**/pom.xml') }}
      - name: azure-version
        run: >-
          AZURE_SHA=$(git rev-parse --short HEAD);
          AZURE_REV=$(git rev-list --tags --max-count=1);
          AZURE_TAG=$(git describe --tags ${AZURE_REV} 2> /dev/null || echo 0.0.0);
          AZURE_VERSION=${AZURE_TAG}-${AZURE_SHA};
          echo "AZURE_VERSION=${AZURE_VERSION}" >> ${GITHUB_ENV};
      - name: upstream-version
        working-directory: ./upstream/dgca-issuance-service
        run: >-
          APP_SHA=$(git rev-parse --short HEAD);
          APP_REV=$(git rev-list --tags --max-count=1);
          APP_TAG=$(git describe --tags ${APP_REV} 2> /dev/null || echo 0.0.0);
          APP_VERSION=${APP_TAG}-${APP_SHA}-azure-${AZURE_VERSION};
          echo "APP_VERSION=${APP_VERSION}" >> ${GITHUB_ENV};
      - name: mvn
        working-directory: ./upstream/dgca-issuance-service
        run: >-
          mvn versions:set
          --batch-mode
          --file ./pom.xml
          --settings ./settings.xml
          --define newVersion="${APP_VERSION}";
          mvn clean install -P azure
          --batch-mode
          --file ./pom.xml
          --settings ./settings.xml
          --define app.packages.username="${APP_PACKAGES_USERNAME}"
          --define app.packages.password="${APP_PACKAGES_PASSWORD}";
        env:
          APP_PACKAGES_USERNAME: ${{ github.actor }}
          APP_PACKAGES_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
      # GHCR Requires the image name to be lowercase, while
      # `github.repository` will contain `Azure/...`.
      - name: lowercase-repository
        run: >-
          GITHUB_REPO=${{ github.repository }};
          echo "GITHUB_REPO_LWR=${GITHUB_REPO,,}" >> ${GITHUB_ENV};
      - name: docker
        working-directory: ./upstream/dgca-issuance-service
        run: >-
          echo "${APP_PACKAGES_PASSWORD}" |
          docker login "${APP_PACKAGES_URL}"
          --username "${APP_PACKAGES_USERNAME}"
          --password-stdin;
          docker build .
          --file ./Dockerfile
          --tag "${APP_PACKAGES_URL}:${APP_VERSION}";
          docker push "${APP_PACKAGES_URL}:${APP_VERSION}";
        env:
          APP_PACKAGES_URL: ghcr.io/${{ env.GITHUB_REPO_LWR }}/dgca-issuance-service
          APP_PACKAGES_USERNAME: ${{ github.actor }}
          APP_PACKAGES_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
